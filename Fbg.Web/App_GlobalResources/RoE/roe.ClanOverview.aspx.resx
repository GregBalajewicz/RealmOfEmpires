<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="acceptBtn" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="btn_CreateClan" xml:space="preserve">
    <value>Create Clan</value>
  </data>
  <data name="charNotAllowed" xml:space="preserve">
    <value>The following characters are not allowed and will be stripped from the name:</value>
  </data>
  <data name="clanDetail" xml:space="preserve">
    <value>You are currently not part of a clan.
&lt;br /&gt;
&lt;br /&gt;
You can either create and lead your own clan, or contact some other clan and ask for an invitation
&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;Create your own clan&lt;/strong&gt;</value>
  </data>
  <data name="clanExists" xml:space="preserve">
    <value>Clan name already exists</value>
  </data>
  <data name="confirmDisband" xml:space="preserve">
    <value>Are you sure you would like to disband this clan?</value>
  </data>
  <data name="confirmLeave" xml:space="preserve">
    <value>Are you sure you want to leave this clan?</value>
  </data>
  <data name="currClan" xml:space="preserve">
    <value>You are currently part of clan</value>
  </data>
  <data name="days" xml:space="preserve">
    <value>day(s)</value>
  </data>
  <data name="dblBackSlashes" xml:space="preserve">
    <value>double back slashes</value>
  </data>
  <data name="disbClan" xml:space="preserve">
    <value>Disband Clan</value>
  </data>
  <data name="dispToAll" xml:space="preserve">
    <value>(will be displayed to all clan members on their village overview page)</value>
  </data>
  <data name="editlLnkBtn" xml:space="preserve">
    <value>[Edit...]</value>
  </data>
  <data name="emptyInvites" xml:space="preserve">
    <value>Currently, you do not have any invitations to other clans. To get invited, find a clan you like and message some clan member asking for an invitation.</value>
  </data>
  <data name="errorLeaving" xml:space="preserve">
    <value>Error: You are unable to leave your current clan since you are the only owner&lt;BR&gt;You either have to make someone else an owner and then leave, or disband this clan</value>
  </data>
  <data name="expsIn" xml:space="preserve">
    <value>expires in</value>
  </data>
  <data name="hClanAnn" xml:space="preserve">
    <value>Clan Announcement</value>
  </data>
  <data name="hInvitation" xml:space="preserve">
    <value>Invitation from other clans</value>
  </data>
  <data name="hMyClan" xml:space="preserve">
    <value>My Clan</value>
  </data>
  <data name="hRecentEvents" xml:space="preserve">
    <value>Recent Events</value>
  </data>
  <data name="inputCharNotAll" xml:space="preserve">
    <value>The following characters are not allowed and will be stripped from the input:</value>
  </data>
  <data name="invRemoved" xml:space="preserve">
    <value>Invalid characters will be removed - click to learn more.</value>
  </data>
  <data name="joinClan_TT" xml:space="preserve">
    <value>Join this clan</value>
  </data>
  <data name="joinNewClan" xml:space="preserve">
    <value>Joining this clan will make you leave your current one. Are you sure you want to join this clan?</value>
  </data>
  <data name="leaveClanBtn" xml:space="preserve">
    <value>Leave Clan</value>
  </data>
  <data name="lessThan" xml:space="preserve">
    <value>less than sign</value>
  </data>
  <data name="msg_clanDontExist" xml:space="preserve">
    <value>The clan does not exist. Perhaps it was disbanded.&lt;br&gt;If you believe this to be a problem,
&lt;a href='http://www.new.facebook.com/board.php?uid=10471770557 '&gt; contact support&lt;/a&gt;</value>
  </data>
  <data name="msg_limitReached" xml:space="preserve">
    <value>You cannot join this clan since this clan reached the maximum member size already.</value>
  </data>
  <data name="msg_noInvite" xml:space="preserve">
    <value>You don't have invitation to this clan.</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="noHTMLEle" xml:space="preserve">
    <value>Any HTML elements</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="rejectBtn" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="renameClan" xml:space="preserve">
    <value>Are you sure you want to rename the clan? Do so with great care as other players may have already gotten used to this name. Are you sure you want to rename it?</value>
  </data>
  <data name="renameName" xml:space="preserve">
    <value>Rename Clan</value>
  </data>
  <data name="saveBtn" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="typeInstead" xml:space="preserve">
    <value>(type in "&amp; l t" instead - no spaces)</value>
  </data>
</root>