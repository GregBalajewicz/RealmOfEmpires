<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="agreeWithTerms" xml:space="preserve">
    <value>I agree with the</value>
  </data>
  <data name="beforeEntering" xml:space="preserve">
    <value>before entering this realm.</value>
  </data>
  <data name="btn_GO" xml:space="preserve">
    <value>GO!</value>
  </data>
  <data name="chooseWisely" xml:space="preserve">
    <value>Choose wisely, your nickname can't be changed later!</value>
  </data>
  <data name="lastStep" xml:space="preserve">
    <value>Last step before you accept your gift!</value>
  </data>
  <data name="lbl_NameUsed" xml:space="preserve">
    <value>This Nickname is already in use. Please try a different name.</value>
  </data>
  <data name="lbl_Nickname" xml:space="preserve">
    <value>Nickname:</value>
  </data>
  <data name="lbl_OffensiveName" xml:space="preserve">
    <value>Your nickname includes language that is considered offensive and is against our terms of use. &lt;br/&gt;Breaking our Terms of Use may lead to being suspended or banned. Please choose a different name.</value>
  </data>
  <data name="link_BuyServants" xml:space="preserve">
    <value>Buy more servants</value>
  </data>
  <data name="link_TOU" xml:space="preserve">
    <value>Terms Of Use</value>
  </data>
  <data name="li_NE" xml:space="preserve">
    <value>North East</value>
  </data>
  <data name="li_NW" xml:space="preserve">
    <value>North West</value>
  </data>
  <data name="li_Random" xml:space="preserve">
    <value>Random (optimal) Location</value>
  </data>
  <data name="li_SE" xml:space="preserve">
    <value>South East</value>
  </data>
  <data name="li_SW" xml:space="preserve">
    <value>South West</value>
  </data>
  <data name="mustAgree" xml:space="preserve">
    <value>You must agree with the terms of use.</value>
  </data>
  <data name="NOTE" xml:space="preserve">
    <value>NOTE!&lt;br/&gt;You are about to register on a temporary tournament realm.&lt;br/&gt;Please familiarize yourself with its unique rules.</value>
  </data>
  <data name="notEnoughServants" xml:space="preserve">
    <value>You do not have enough servants to enter this realm. You need 100 servants for Nobility Package for the first month of play.</value>
  </data>
  <data name="pleaseRegister" xml:space="preserve">
    <value>Please Register</value>
  </data>
  <data name="rev_InvUserName" xml:space="preserve">
    <value>Invalid User Name - Only letters, numbers, '.' and '_' allowed.</value>
  </data>
  <data name="rfv_EnterName" xml:space="preserve">
    <value>Enter a nickname</value>
  </data>
  <data name="startIn" xml:space="preserve">
    <value>Start In</value>
  </data>
  <data name="tryToPlace" xml:space="preserve">
    <value>We will try to place you in &lt;i&gt;or as close to&lt;/i&gt; the quadrant you have chosen.</value>
  </data>
  <data name="RealmParams" xml:space="preserve">
    <value>Realm Parameters</value>
  </data>
  <data name="BackToRealmSelection" xml:space="preserve">
    <value>Back To Realm Selection</value>
  </data>
</root>