<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigureElipses" xml:space="preserve">
    <value>Configure...</value>
  </data>
  <data name="ConvenientSilverTransport" xml:space="preserve">
    <value>Convenient Silver Transport</value>
  </data>
  <data name="EasilyTransportSilver" xml:space="preserve">
    <value>Allows you to easily transport silver from&lt;br /&gt;
                your other villages to the current one.&lt;br /&gt;</value>
  </data>
  <data name="FreeTrialAvailableQuestion" xml:space="preserve">
    <value>(perhaps there is a free trial available?) and you will not only have access to this great time saver, but you will also support further development of the game!</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="FromClosestVillages" xml:space="preserve">
    <value>from closest villages</value>
  </data>
  <data name="Get" xml:space="preserve">
    <value>Get</value>
  </data>
  <data name="GETMAX" xml:space="preserve">
    <value>GET MAX - </value>
  </data>
  <data name="In" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="InitiatesAsManyCanAccomodate" xml:space="preserve">
    <value>Initiates as many transports as this village can accomodate.</value>
  </data>
  <data name="NoMoreTransports" xml:space="preserve">
    <value>No more transports are currently available</value>
  </data>
  <data name="NotShowingWithLessThanThousand" xml:space="preserve">
    <value>Not showing villages with less than 1,000 silver available</value>
  </data>
  <data name="OnlyNumbersAccepted" xml:space="preserve">
    <value>Only Numbers Accepted</value>
  </data>
  <data name="ShowAll" xml:space="preserve">
    <value>Show all</value>
  </data>
  <data name="ShowingUpTo20Villages" xml:space="preserve">
    <value>Showing up to 20 closest villages</value>
  </data>
  <data name="TransportNoLongerPossible" xml:space="preserve">
    <value>This transport is no longer possible. Please try a different village.</value>
  </data>
  <data name="TransportsAvailableTo" xml:space="preserve">
    <value>Transports available to</value>
  </data>
  <data name="TransportSent" xml:space="preserve">
    <value>Transport Sent!</value>
  </data>
  <data name="TransportsSent" xml:space="preserve">
    <value>Transport(s) sent!</value>
  </data>
  <data name="UnlockPremiumFeature" xml:space="preserve">
    <value>Unlock this premium feature</value>
  </data>
  <data name="VillagesCapableOfSilverTransport" xml:space="preserve">
    <value>, and you will get here a list of all your villages which are capable of transporting silver to your current village. You will be able to initiate some or all transports with just one click and you will have the silver immediately available at your village to use.
        &lt;br /&gt;
        &lt;br /&gt;
        The system will ensure that you do not send more silver than your treasury can store also and you will be able to configure which villages can transport silver and which cannot for maximum flexibility.
        &lt;br /&gt;
        &lt;br /&gt;
        Learn how to</value>
  </data>
  <data name="UnlockThisFeature" xml:space="preserve">
    <value>unlock this feature</value>
  </data>
</root>