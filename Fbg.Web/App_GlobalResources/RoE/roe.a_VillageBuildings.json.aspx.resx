<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aBusy_st" xml:space="preserve">
    <value />
  </data>
  <data name="aBusy_t" xml:space="preserve">
    <value>You are currently constructing a building. Wait until it finishes before you can issue more build orders.&lt;BR&gt;&lt;BR&gt;&lt;B&gt;UNLOCK 2 BUILD ORDERS FEATURE!&lt;/B&gt; &lt;BR&gt;Upgrade Village Headquarters building to level 10 and you can then issue 2 build orders simultaneously!</value>
  </data>
  <data name="aBusy_title" xml:space="preserve">
    <value>Construction Busy</value>
  </data>
  <data name="aSilverLacking_st" xml:space="preserve">
    <value />
  </data>
  <data name="aSilverLacking_t" xml:space="preserve">
    <value>You need to wait until you get more silver before you can do this construction.&lt;BR&gt;&lt;BR&gt;Every contructions has a cost in silver. If you do not have enough silver, you will need to wait until your silver mine produces the required silver; alternatively, you could consider raiding other villages to plunder their silver (just make sure those villages are not defended!!)&lt;BR&gt;&lt;BR&gt;Your current silver is displayed on the top, just to the right of your village name, next to the</value>
    <comment>&lt;img src=\'https://static.realmofempires.com/images/coin.png\' style=\'border-width:0px;\'/&gt; icon</comment>
  </data>
  <data name="aSilverLacking_title" xml:space="preserve">
    <value>Need More Silver</value>
  </data>
  <data name="aUpgradeFarm_st" xml:space="preserve">
    <value />
  </data>
  <data name="aUpgradeFarm_t" xml:space="preserve">
    <value>You need to upgrade your farm land before you can do this construction.&lt;BR&gt;&lt;BR&gt;Buildings require workers to maintain them and those workers consume food. You have to be producing enought food to support the workers required. The amount of food required for this, is the number under the Food column. &lt;BR&gt;&lt;BR&gt;You can see your current farm\s output on the top, on the same line as your village name, all the way to the right, next to the </value>
    <comment>&lt;img src=\'https://static.realmofempires.com/images/food.png\' style=\'border-width:0px;\'/&gt; icon</comment>
  </data>
  <data name="aUpgradeFarm_title" xml:space="preserve">
    <value>Upgrade Farm Land</value>
  </data>
  <data name="tblBuildings_st" xml:space="preserve">
    <value />
  </data>
  <data name="tblBuildings_t" xml:space="preserve">
    <value>This is the list of your buildings.&lt;BR&gt;&lt;BR&gt;You can upgrade a building by clicking the &lt;U&gt;Upgrade to Level X&lt;/U&gt; link.&lt;BR&gt;&lt;BR&gt;Each building requires Silver and Food (for the workers).Each upgrade also takes time to complete.&lt;BR&gt;&lt;BR&gt;Some buildings are not immediately available as you may need to construct other buildings first.&lt;BR&gt;&lt;BR&gt;You can click the building name to find out what its function is</value>
  </data>
  <data name="tblBuildings_title" xml:space="preserve">
    <value>Buildings</value>
  </data>
  <data name="tblUpgrades_t" xml:space="preserve">
    <value>Here you can check on the progress of your upgrades. Each upgrade takes a certain amount of time. You can cancel an upgrade hence getting a complete refund but you lose any time spent on the construction.</value>
  </data>
  <data name="tblUpgrades_title" xml:space="preserve">
    <value>Upgrades</value>
  </data>
</root>