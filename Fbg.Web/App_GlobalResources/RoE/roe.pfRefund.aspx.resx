<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveExpiresIn" xml:space="preserve">
    <value>Active. Expires in</value>
  </data>
  <data name="BattleSimulatorPlus" xml:space="preserve">
    <value>Battle Simulator Plus</value>
  </data>
  <data name="BelowAreTheDepreciatedPackages" xml:space="preserve">
    <value>Below are the depreciated packages.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CommandTroopEnhancements" xml:space="preserve">
    <value>Command Troop Enhancements</value>
  </data>
  <data name="ConvenientSilverTransport" xml:space="preserve">
    <value>Convenient Silver Transport</value>
  </data>
  <data name="DayBracketsS" xml:space="preserve">
    <value>day(s)</value>
  </data>
  <data name="DaysGet" xml:space="preserve">
    <value>days - get</value>
  </data>
  <data name="GiantMap" xml:space="preserve">
    <value>Giant Map</value>
  </data>
  <data name="GroupingVillages" xml:space="preserve">
    <value>Grouping Villages</value>
  </data>
  <data name="IncomingAndOutgoingTroops" xml:space="preserve">
    <value>Incoming and Outgoing troops enhancements</value>
  </data>
  <data name="LargeMap" xml:space="preserve">
    <value>Large Map</value>
  </data>
  <data name="MassRecruitAndUpgrade" xml:space="preserve">
    <value>Mass Recruit and Upgrade</value>
  </data>
  <data name="MessagesPlus" xml:space="preserve">
    <value>Messages Plus</value>
  </data>
  <data name="NobilityPackage" xml:space="preserve">
    <value>Nobility Package</value>
  </data>
  <data name="NotesOnPlayersAndVillages" xml:space="preserve">
    <value>Notes on players and villages</value>
  </data>
  <data name="PercentMoreAttack" xml:space="preserve">
    <value>20% Attack Bonus</value>
  </data>
  <data name="PercentMoreDefence" xml:space="preserve">
    <value>20% Defense Bonus</value>
  </data>
  <data name="PercentMoreSilver" xml:space="preserve">
    <value>25% More Silver</value>
  </data>
  <data name="QuickSilverTransport" xml:space="preserve">
    <value>Quick silver transport</value>
  </data>
  <data name="ReportsPlus" xml:space="preserve">
    <value>Reports Plus</value>
  </data>
  <data name="Servants" xml:space="preserve">
    <value>Servants</value>
  </data>
  <data name="SummaryOverviewPages" xml:space="preserve">
    <value>Summary / Overview Pages</value>
  </data>
  <data name="SupportAndAbroadTroops" xml:space="preserve">
    <value>Support and Abroad troops from all villages</value>
  </data>
  <data name="SupportReturnsTimesFaster" xml:space="preserve">
    <value>Support Returns 10 Times Faster</value>
  </data>
  <data name="TroopMovementsOnPlayer" xml:space="preserve">
    <value>Troop movements on Player and Village overview</value>
  </data>
  <data name="TroopMovementsOnYourVillage" xml:space="preserve">
    <value>Troop movements on your village overview</value>
  </data>
  <data name="UnlimitedBuildingQ" xml:space="preserve">
    <value>Unlimited Building Q + Improvements</value>
  </data>
  <data name="UpgradeToMaxLevel" xml:space="preserve">
    <value>Upgrade to max level</value>
  </data>
  <data name="VillageOverviewEnhance" xml:space="preserve">
    <value>Village Overview Enhancements</value>
  </data>
  <data name="YouCanCancelActivePackages" xml:space="preserve">
    <value>Here you can cancel active packages and get a partial prorated refund.&lt;br /&gt;
                            Only active packages qualifying for at least 1 servant refund will be listed here.</value>
  </data>
  <data name="YouCanNoLongerActivate" xml:space="preserve">
    <value>You can no longer activate these but you can get a full prorated refund if you currently have one active.</value>
  </data>
</root>