<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SpyCaptured_executed_DataTemplate" xml:space="preserve">
    <value>Like a true medieval despot, {2} ruthlessly executed the captured enemy spies!</value>
  </data>
  <data name="SpyCaptured_executed_messageToUser" xml:space="preserve">
    <value>Let the world know that justice has been done!</value>
  </data>
  <data name="SpyCaptured_executed_msg" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="SpyCaptured_released_DataTemplate" xml:space="preserve">
    <value>{6} subjects rejoice in {6} benevolence!</value>
  </data>
  <data name="SpyCaptured_released_messageToUser" xml:space="preserve">
    <value>Tell the world how merciful you are, and they will love you!</value>
  </data>
  <data name="SpyCaptured_released_msg" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="SpyCaptured_tortured2_DataTemplate" xml:space="preserve">
    <value>{2} mercilessly tortured the captured spies of {6} enemy until they squealed telling {3} everything!</value>
  </data>
  <data name="SpyCaptured_tortured2_messageToUser" xml:space="preserve">
    <value>And this is how you interrogate the medieval way!</value>
  </data>
  <data name="SpyCaptured_tortured2_msg" xml:space="preserve">
    <value>Torture the captured spies</value>
  </data>
  <data name="SpyCaptured_tortured_DataTemplate" xml:space="preserve">
    <value>Let the world know what happens to spies who try to penetrate {2}\'s empire!</value>
  </data>
  <data name="SpyCaptured_tortured_messageToUser" xml:space="preserve">
    <value>Let the world know what happens to those that cross you!</value>
  </data>
  <data name="SpyCaptured_tortured_msg" xml:space="preserve">
    <value>Torture the captured spies</value>
  </data>
  <data name="SpyCaptured_tortured2_ActionLink" xml:space="preserve">
    <value>CONGRATULATE {0}</value>
  </data>
  <data name="SpyCaptured_executed_ActionLink" xml:space="preserve">
    <value>CONGRATULATE {0}</value>
  </data>
  <data name="SpyCaptured_released_ActionLink" xml:space="preserve">
    <value>CONGRATULATE {0}</value>
  </data>
  <data name="SpyCaptured_tortured_ActionLink" xml:space="preserve">
    <value>HELP OUT A BIT...</value>
  </data>
  <data name="TutorialComplete_ActionLink" xml:space="preserve">
    <value>CONGRATULATE {0}</value>
  </data>
  <data name="TutorialComplete_DataTemplate" xml:space="preserve">
    <value>

                     In celebration of {6} sovereign rule, {2} is throwing a feast for {6} subjects and {6} nobles.</value>
  </data>
  <data name="TutorialComplete_messageToUser" xml:space="preserve">
    <value />
  </data>
  <data name="TutorialComplete_msg" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="ReserchInitated_ActionLink" xml:space="preserve">
    <value>Help {0}</value>
  </data>
  <data name="ReserchInitated_DataTemplate" xml:space="preserve">
    <value>Join {2}'s esteemed panel of scholars to help discover the unknown!</value>
  </data>
  <data name="ReserchInitated_messageToUser" xml:space="preserve">
    <value>Speed-up you research by getting multiple researchers! Posting story is a great way to accomplish this!</value>
  </data>
  <data name="ReserchInitated_msg" xml:space="preserve">
    <value>SPEED-UP</value>
  </data>
  <data name="ReserchInitated_Title" xml:space="preserve">
    <value>{2} is researching {10} and needs brilliant friends like you!</value>
  </data>
  <data name="SpyCaptured_executed_Title" xml:space="preserve">
    <value>{2} executed the captured spies!</value>
  </data>
  <data name="SpyCaptured_released_Title" xml:space="preserve">
    <value>{2} showed incredible mercy by sparing the lives of enemy spies!</value>
  </data>
  <data name="SpyCaptured_tortured2_Title" xml:space="preserve">
    <value>{2}'s enemy spies squealed under torture!</value>
  </data>
  <data name="SpyCaptured_tortured_Title" xml:space="preserve">
    <value>{2} mercilessly tortured the captured spies of his enemy!</value>
  </data>
</root>