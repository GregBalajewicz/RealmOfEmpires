<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arriving" xml:space="preserve">
    <value>&lt;strong&gt;arriving &lt;/strong&gt;</value>
  </data>
  <data name="AttackExclamation" xml:space="preserve">
    <value>Attack!</value>
  </data>
  <data name="BattleHandicap" xml:space="preserve">
    <value>&lt;B&gt;Battle Handicap:&lt;/B&gt; </value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>change</value>
  </data>
  <data name="CommandTroops" xml:space="preserve">
    <value>Command Ships</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm {0}</value>
  </data>
  <data name="ConfirmAndClose" xml:space="preserve">
    <value>Confirm {0} &amp; Close Window</value>
  </data>
  <data name="DistanceDesertionChance" xml:space="preserve">
    <value>When sending an attack over long distances, some ships may desert.&lt;BR&gt;&lt;BR&gt;The longer the distance the more ships you will lose to desertion.&lt;BR&gt;&lt;BR&gt;You can prevent any desertion by increasing the number of ships you send in an attack, or including a Senator with the attack.&lt;BR&gt;&lt;BR&gt;NOTE: Cancelling an attack will not reclaim any deserted ships. I.e., ships desert immediately when you launch the attack</value>
  </data>
  <data name="DistanceSquares" xml:space="preserve">
    <value>&lt;B&gt;Distance:&lt;/b&gt; {0} squares</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorBeginnerProtection" xml:space="preserve">
    <value>Error - This player is under beginner protection until {0}</value>
  </data>
  <data name="ErrorNoSupportRebels" xml:space="preserve">
    <value>Error - You cannot support Rebels. </value>
  </data>
  <data name="ErrorNotEnoughTroops" xml:space="preserve">
    <value>Error - Not enough ships to send...</value>
  </data>
  <data name="ErrorNoTroopsSelected" xml:space="preserve">
    <value>Error - No ships selected...</value>
  </data>
  <data name="ErrorRebelTooFar" xml:space="preserve">
    <value>Error - You cannot attack a rebel planet further than 22 spaces away.</value>
  </data>
  <data name="ErrorSleepMode" xml:space="preserve">
    <value>Error - This player is in sleep mode and cannot be attacked. Sleep mode expires at the latest {0}</value>
  </data>
  <data name="ErrorVillageNotFound" xml:space="preserve">
    <value>Error - Planet not found...</value>
  </data>
  <data name="ErrorVillageSameOrigin" xml:space="preserve">
    <value>Error - Target village same as village of origin...</value>
  </data>
  <data name="GiveTenVillagesPremiumFeature" xml:space="preserve">
    <value>This premium features will&lt;BR&gt; give you the last 10 planets&lt;BR&gt; you either attacked or supported.&lt;BR&gt;&lt;BR&gt;</value>
  </data>
  <data name="IncomingTo" xml:space="preserve">
    <value>Incoming to {0}({1},{2})</value>
  </data>
  <data name="IncomingToTargetVillage" xml:space="preserve">
    <value>Incoming to target planet</value>
  </data>
  <data name="LastTenTargets" xml:space="preserve">
    <value>Last 10 targets...</value>
  </data>
  <data name="LoseToDesertion" xml:space="preserve">
    <value>You will lose all ships to desertion; You need to send more ships.</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>Max:</value>
  </data>
  <data name="NoTroopsIncoming" xml:space="preserve">
    <value>There are no ships incoming to this planet that you are aware of.</value>
  </data>
  <data name="OnlyNumbersAllowed" xml:space="preserve">
    <value>Only numbers allowed</value>
  </data>
  <data name="OutgoingTroopsCurrent" xml:space="preserve">
    <value>Outgoing ships from current planet</value>
  </data>
  <data name="OutOfWillDesert" xml:space="preserve">
    <value>{0} &lt;span rel='o_desert' class='Error help'&gt;({2} out of {1} units will desert)&lt;/span&gt;</value>
  </data>
  <data name="PowerlessTroops" xml:space="preserve">
    <value>You are attacking with special units ONLY. These units do not have any offensive capabilities. If you send them alone, they will surely get slaughtered, even if the target planet has no ships, as the planet itself will be able to overpower your defenseless ships. If you choose to send them anyway, you are sending them to certain death.</value>
  </data>
  <data name="ReluctantTroopsAttackAnyway" xml:space="preserve">
    <value>If you proceed, your ships will, reluctantly, obey your orders and attack.</value>
  </data>
  <data name="SquareBracketFrom" xml:space="preserve">
    <value>[from</value>
  </data>
  <data name="StewardNotAllowed" xml:space="preserve">
    <value>&lt;br /&gt; &lt;br /&gt;REMEMBER! As a steward, you are not allowed the following: 
                                    &lt;ul&gt;&lt;LI&gt;Attacking the same player both from your account and from account you are managing&lt;/LI&gt;
                                    &lt;LI&gt;Supporting yourself from the player you are managing&lt;/LI&gt;
                                    &lt;LI&gt;Attacking the planets of the account you are managing&lt;/LI&gt;&lt;/ul&gt;
                                    &lt;br /&gt;This applies during stewardship and &lt;i&gt;48 hours after&lt;/i&gt; stewardship is cancelled!
                                    You will be banned for breaking these rules!</value>
  </data>
  <data name="StewardsCannotLaunchAttacks" xml:space="preserve">
    <value>Stewards cannot launch attacks on this realm</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="Target" xml:space="preserve">
    <value>&lt;strong&gt;Target&lt;/strong&gt;</value>
  </data>
  <data name="TargetVillage" xml:space="preserve">
    <value>Target planet</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>&lt;B&gt;To:&lt;/B&gt; </value>
  </data>
  <data name="TravelTime" xml:space="preserve">
    <value>&lt;strong&gt;Travel time: &lt;/strong&gt;</value>
  </data>
  <data name="UnlockItNow" xml:space="preserve">
    <value>Unlock it now!</value>
  </data>
  <data name="ValidCoordsOnly" xml:space="preserve">
    <value>Only valid coordinates allowed</value>
  </data>
  <data name="WarningAttackAlly" xml:space="preserve">
    <value>WARNING! You are about to attack an ally! </value>
  </data>
  <data name="WarningAttackNAPMember" xml:space="preserve">
    <value>WARNING! You are about to attack member with a NAP! </value>
  </data>
  <data name="WarningAttackOwnVillage" xml:space="preserve">
    <value>WARNING! You are about to attack your own planet! </value>
  </data>
  <data name="WarningLoseSomeTroops" xml:space="preserve">
    <value>WARNING! You will lose some of your ships! </value>
  </data>
  <data name="WarningUnitsWillDie" xml:space="preserve">
    <value>WARNING! Your units will die! </value>
  </data>
</root>