<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="ArrivalIn" xml:space="preserve">
    <value>Arrival In</value>
  </data>
  <data name="ArrivalTime" xml:space="preserve">
    <value>Arrival Time</value>
  </data>
  <data name="ArriveIn" xml:space="preserve">
    <value>arrive in </value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CannotTransportAnymoreSilver" xml:space="preserve">
    <value>You cannot transport anymore minerals until some of your transports return</value>
  </data>
  <data name="CantMakeLoans" xml:space="preserve">
    <value>You can't make loans to planets not owned by you</value>
  </data>
  <data name="CantTransportSilverToSameVillage" xml:space="preserve">
    <value>You can't transport silver to the same planet.</value>
  </data>
  <data name="CoinsGreaterThanZero" xml:space="preserve">
    <value>Coins must me greater then zero.</value>
  </data>
  <data name="ConfigQuickTransport" xml:space="preserve">
    <value>Configure Quick Transport</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="DestinationVillage" xml:space="preserve">
    <value>Destination Planet</value>
  </data>
  <data name="ErrorTransportSameVillage" xml:space="preserve">
    <value>Error - Transport to planet the same as transport from planet...</value>
  </data>
  <data name="ErrorVillageNotFound" xml:space="preserve">
    <value>Error - Planet not found...</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="MaxSendFortyFiveThousand" xml:space="preserve">
    <value>Maximum you can send is 45,000</value>
  </data>
  <data name="MaxYouCanSend" xml:space="preserve">
    <value>Max you can send is </value>
  </data>
  <data name="NoCurrentTransports" xml:space="preserve">
    <value>You do not have any transports currently.</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>none</value>
  </data>
  <data name="NoReturningTransports" xml:space="preserve">
    <value>You do not have any returning transports currently.</value>
  </data>
  <data name="NumbersOnly" xml:space="preserve">
    <value>Only numbers accepted</value>
  </data>
  <data name="OutgoingTransports" xml:space="preserve">
    <value>Outgoing Transports</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>- owner:</value>
  </data>
  <data name="PleaseEnterAmount" xml:space="preserve">
    <value>Please enter the amount</value>
  </data>
  <data name="Reserved" xml:space="preserve">
    <value>Reserved</value>
  </data>
  <data name="ReturningFromVillage" xml:space="preserve">
    <value>Returning From Planet</value>
  </data>
  <data name="ReturningTroops" xml:space="preserve">
    <value>Returning Transports</value>
  </data>
  <data name="StewardCannotSendSilver" xml:space="preserve">
    <value>REMEMBER! As a steward, you are not allowed to send minerals from this this empire's planet to yours. You will be banned for breaking this rule!</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>TO</value>
  </data>
  <data name="Transport" xml:space="preserve">
    <value>Transport</value>
  </data>
  <data name="TransportAmountThanZero" xml:space="preserve">
    <value>You should transport an amount greater then Zero</value>
  </data>
  <data name="TransportCoinsMoreThanAllowed" xml:space="preserve">
    <value>You try to transport coins more then allowed.</value>
  </data>
  <data name="TransportCoinsMoreThanMax" xml:space="preserve">
    <value>You are trying to transport a coins more then the max value</value>
  </data>
  <data name="TransportDollar" xml:space="preserve">
    <value>Transport $</value>
  </data>
  <data name="Transports" xml:space="preserve">
    <value>Transports -</value>
  </data>
  <data name="TransportSent" xml:space="preserve">
    <value>Transport sent.</value>
  </data>
  <data name="TransportSilver" xml:space="preserve">
    <value>Transport Minerals</value>
  </data>
  <data name="TransportSilverHere" xml:space="preserve">
    <value>transport minerals here</value>
  </data>
  <data name="MaxSilverToTransportFromLvl" xml:space="preserve">
    <value>Max Minerals To Transport from Level</value>
  </data>
  <data name="MaxSilverToTransportInfo" xml:space="preserve">
    <value>Max Minerals To Transport Information</value>
  </data>
</root>